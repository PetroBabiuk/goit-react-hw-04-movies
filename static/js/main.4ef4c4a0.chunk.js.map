{"version":3,"sources":["components/Navigation/Navigation.module.css","components/Navigation/Navigation.js","servises/moviesApi.js","views/HomePage.js","components/Searchbar/Searchbar.js","views/MoviesPage.js","views/Cast.js","views/Reviews.js","components/ButtonGoBack/ButtonGoBack.js","views/MovieDetailsPage.js","views/NotFoundPage.js","App.js","index.js"],"names":["module","exports","Navigation","className","s","navigation","exact","to","link","activeClassName","activeLink","BASE_URL","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","HomePage","useState","movies","setMovies","useEffect","then","results","map","movie","id","title","Searchbar","onSubmit","inputValue","setInputValue","e","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","MoviesPage","query","setQuery","fetchSearchingMovies","total_results","length","Cast","movieId","actors","setActors","result","cast","actor","profile_path","src","alt","name","Reviews","reviews","setReviews","review","author","content","ButtonGoBack","history","useHistory","onClick","goBack","MovieDetailsPage","useParams","useRouteMatch","setMovie","release_date","poster_path","vote_average","overview","genres","genre","path","NotFoundPage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ef4c4a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1VtLy\",\"link\":\"Navigation_link__12o2K\",\"activeLink\":\"Navigation_activeLink__2rUFB\"};","import { NavLink } from \"react-router-dom\";\nimport s from './Navigation.module.css';\n\nconst Navigation = () => (\n    <nav className={s.navigation}>\n        <NavLink exact to=\"/\"className={s.link} activeClassName={s.activeLink}>Home</NavLink>\n        <NavLink to=\"/movies\"className={s.link} activeClassName={s.activeLink}>Movies</NavLink>\n    </nav>\n);\n\nexport default Navigation;","const BASE_URL = \"https://api.themoviedb.org/3\";\n// const APIKEY = \"api_key=d9642dccb373084b38b1ae3b08bc851f\";\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not Found'));\n}\n\nexport function fetchTrendingToday() {\n    return fetchWithErrorHandling(`${BASE_URL}/trending/movie/day?api_key=d9642dccb373084b38b1ae3b08bc851f`);\n}\n\nexport function fetchSearchingMovies(query) {\n    return fetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=d9642dccb373084b38b1ae3b08bc851f&language=en-US&query=${query}&page=1&include_adult=false`);\n}\n\nexport function fetchMovieById(id) {\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${id}?api_key=d9642dccb373084b38b1ae3b08bc851f&language=en-US`);\n}\n\nexport function fetchMovieCast(id) {\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${id}/credits?api_key=d9642dccb373084b38b1ae3b08bc851f&language=en-US`)\n}\n\nexport function fetchMovieReviews(id) {\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${id}/reviews?api_key=d9642dccb373084b38b1ae3b08bc851f&language=en-US&page=1`)\n}","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchTrendingToday } from '../servises/moviesApi';\n\nfunction HomePage() {\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        fetchTrendingToday().then(movies => setMovies(movies.results));\n    }, []);\n\n    return (\n        <>\n            <h1>Trending today</h1>\n            <ul>\n                {movies && movies.map(movie =>\n                    <li key={movie.id}>\n                        <Link to={`/movies/${movie.id}`} id={movie.id}>{movie.title}</Link>\n                    </li>)}\n            </ul>\n        </>\n    );\n}\n\nexport default HomePage;","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nconst Searchbar = ({onSubmit}) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = e => {\n        setInputValue(e.currentTarget.value);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if (inputValue.trim() === '') {\n          return toast.error('Please do not use empty string, you have to write something');\n        }\n\n        onSubmit(inputValue);\n        setInputValue('');\n    };\n\n    return (\n        <header className=\"Searchbar\">\n            <form className=\"SearchForm\" onSubmit={handleSubmit}>\n                <button type=\"submit\" className=\"SearchForm-button\">\n                    <span className=\"SearchForm-button-label\">Search</span>\n                </button>\n\n                <input\n                    className=\"SearchForm-input\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movies\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                />\n            </form>\n        </header>\n    );\n}\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}\n\nexport default Searchbar;","import React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from '../components/Searchbar';\nimport { fetchSearchingMovies } from '../servises/moviesApi';\n\nfunction MoviesPage() {\n    const [query, setQuery] = useState('');\n    const [movies, setMovies] = useState([]);\n\n    \n    useEffect(() => {\n        if (query) {\n            fetchSearchingMovies(query).then(movies => {\n                // console.log(movies);\n                if (movies.total_results === 0) {\n                    throw new Error(`Nothing with name ${query} was not found`);\n                };\n                setMovies([...movies.results]);\n            });\n        }\n    }, [query]);\n\n    const getQuery = query => {\n        setQuery(query);\n    };\n    \n    return (\n        <>\n            <Searchbar onSubmit={getQuery} />\n            {movies.length === 0\n                ? <h1>Start to search</h1>\n                : (<ul className=\"MovieList\">\n                    {movies.map(movie => (\n                        <li key={movie.id}>\n                            <Link to={`/movies/${movie.id}`} id={movie.id}>{movie.title}</Link>\n                        </li>\n                    ))}\n                </ul>)\n            }\n            \n            <ToastContainer />\n        </>\n    )\n}\n\nexport default MoviesPage;","import { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import { Link } from \"react-router-dom\";\nimport { fetchMovieCast } from \"servises/moviesApi\";\n\n\nfunction Cast({ movieId }) {\n    const [actors, setActors] = useState([]);\n\n    useEffect(() => {\n        fetchMovieCast(movieId).then(result => setActors(result.cast));\n        }, [movieId]);\n\n    return (\n        <>\n            {actors.length === 0\n                ? <p>We don't have any information about actors for this movie</p>\n                : (<ul>\n                    {actors.map(actor =>\n                        <li key={actor.id}>\n                            {actor.profile_path\n                                ? (<img src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`} alt={actor.name} />)\n                                : (<img src=\"http://placehold.it/200x300/000000/FFFFFF/?text=There+is+no+photo\" alt={actor.name} />)}\n                            <p>{actor.name}</p>\n                        </li>\n                    )}\n                </ul>)\n            }\n        </>\n    )\n}\n\nexport default Cast;","import { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import { Link } from \"react-router-dom\";\nimport { fetchMovieReviews } from \"servises/moviesApi\";\n\n\nfunction Reviews({ movieId }) {\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        fetchMovieReviews(movieId).then(reviews => {\n            if (reviews.results !== []) {\n                // console.log(reviews.results);\n                setReviews(reviews.results);\n            }\n        });\n        }, [movieId]);\n\n    return (\n        <>\n            {reviews.length === 0\n                ? <p>We don't have any reviews for this movie</p>\n                : (<ul>\n                    {reviews.map(review => <li key={review.id}>\n                        <h4>{review.author}</h4>\n                        <p>{review.content}</p>\n                    </li>)}\n                </ul>)\n            }\n        </>\n    )\n}\n\nexport default Reviews;","import { useHistory } from 'react-router-dom';\n\n\nconst ButtonGoBack = () => {\n    const history = useHistory();\n\n    return (\n            <button onClick={() => history.goBack()}>Go Back</button>\n    )\n};\n\nexport default ButtonGoBack;","import { useState, useEffect } from \"react\";\nimport { NavLink, Route, useRouteMatch, useParams } from \"react-router-dom\";\nimport { fetchMovieById } from \"servises/moviesApi\";\nimport Cast from './Cast';\nimport Reviews from './Reviews';\nimport ButtonGoBack from \"components/ButtonGoBack\";\n\nfunction MovieDetailsPage() {\n    const { movieId } = useParams();\n    const { url } = useRouteMatch();\n    const [movie, setMovie] = useState(null);\n\n        useEffect(() => {\n        fetchMovieById(movieId).then(setMovie);\n        }, [movieId]);\n\n    return (\n        <>\n            {movie &&\n            <>\n                <ButtonGoBack />\n                <div>\n                    <h2>{movie.title} ({movie.release_date})</h2>\n                    <img src={`https://image.tmdb.org/t/p/w500${ movie.poster_path }`} alt={movie.title} />\n                    <p>Average {movie.vote_average}</p>\n                    <h3>Overview</h3>\n                    <p>{movie.overview}</p>\n                    <h3>Genres</h3>\n                    <p>{movie.genres.map(genre =>\n                        <span key={genre.id}>{genre.name}</span>)}\n                    </p>\n                </div>\n\n                <div>\n                    <h3>Additional information</h3>\n                    <p><NavLink to={`${url}/cast`}>Cast</NavLink></p>\n                    <p><NavLink to={`${url}/reviews`} >Reviews</NavLink></p>\n                </div>\n                <div>\n                    <Route path={`${url}/cast`}>\n                        <Cast movieId={movieId}/>\n                    </Route>\n                    <Route path={`${url}/reviews`}>\n                        <Reviews movieId={movieId}/>\n                    </Route>\n                </div>\n            </>\n            }\n        </>\n    );\n}\n\nexport default MovieDetailsPage;","function NotFoundPage() {\n    return <h1>404 Page not found :(</h1>\n}\n\nexport default NotFoundPage;","// import React, {useState} from 'react';\n// import { ToastContainer } from 'react-toastify';\nimport Navigation from 'components/Navigation';\nimport { Switch, Route } from 'react-router';\nimport HomePage from './views/HomePage';\nimport MoviesPage from './views/MoviesPage';\nimport MovieDetailsPage from 'views/MovieDetailsPage';\nimport NotFoundPage from './views/NotFoundPage';\nimport './App.css';\n// import Searchbar from './components/Searchbar';\n// import ImageGallery from './components/ImageGallery';\n// import Modal from './components/Modal';\n\nconst App = () => {\n  // const [query, setQuery] = useState('');\n  // const [showModal, setShowModal] = useState(false);\n  // const [modalImage, setModalImage] = useState('');\n\n  // const openModal = (modalImage) => {\n  //   setShowModal(true);\n  //   setModalImage(modalImage);\n  // };\n  \n  // const closeModal = () => {\n  //   setShowModal(false);\n  // };\n\n  // const getQuery = query => {\n  //   setQuery(query);\n  // }\n\n  return (\n    <div>\n      <Navigation />\n\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n\n        <Route exact path=\"/movies\">\n          <MoviesPage />\n        </Route>\n\n        <Route path=\"/movies/:movieId\">\n          <MovieDetailsPage />\n        </Route>\n\n        <Route>\n          <NotFoundPage />\n        </Route>\n      </Switch>\n      {/* {showModal && <Modal modalImage={modalImage} onClose={closeModal} />}\n        <Searchbar onSubmit={getQuery} />\n        <ImageGallery query={query} onClick={openModal} /> */}\n      {/* <ToastContainer />  */}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}