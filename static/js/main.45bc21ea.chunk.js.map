{"version":3,"sources":["components/MovieList/MovieList.module.css","components/Navigation/Navigation.module.css","components/Searchbar/Searchbar.module.css","components/Cast/Cast.module.css","components/ButtonLoadMore/ButtonLoadMore.module.css","components/Reviews/Reviews.module.css","components/Navigation/Navigation.js","servises/moviesApi.js","components/MovieList/MovieList.js","components/ButtonLoadMore/ButtonLoadMore.js","views/HomePage.js","components/Searchbar/Searchbar.js","views/MoviesPage.js","components/Cast/Cast.js","components/Reviews/Reviews.js","components/ButtonGoBack/ButtonGoBack.js","components/MovieDetailsPage/MovieDetailsPage.js","views/NotFoundPage.js","App.js","index.js","components/MovieDetailsPage/MovieDetailsPage.module.css"],"names":["module","exports","Navigation","className","s","navigation","exact","to","link","activeClassName","activeLink","BASE_URL","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","MovieList","movies","map","movie","MovieListItem","id","MovieListItemUrl","MovieListItemImageWrapper","poster_path","src","alt","title","MovieListItemImage","name","MovieListItemOverlay","MovieListItemOverlayDescription","Button","onClick","ButtonLoadMore","HomePage","useState","setMovies","currentPage","setCurrentPage","useEffect","page","then","prevMovies","results","prevPage","Searchbar","onSubmit","inputValue","setInputValue","SearchForm","e","preventDefault","trim","toast","error","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","MoviesPage","query","setQuery","history","useHistory","location","search","slice","length","fetchSearchingMovies","total_results","push","prevQuery","Cast","movieId","actors","setActors","result","cast","actor","CastItem","profile_path","actorName","Reviews","reviews","setReviews","review","author","content","ButtonGoBack","goBack","MovieDetailsPage","useParams","useRouteMatch","setMovie","film","console","log","document","body","MovieDetailsPageImage","description","release_date","vote_average","overview","genres","genre","path","NotFoundPage","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45bc21ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieList\":\"MovieList_MovieList__2uXh-\",\"MovieListItem\":\"MovieList_MovieListItem__3_b3r\",\"MovieListItemOverlay\":\"MovieList_MovieListItemOverlay__39pZv\",\"MovieListItemImage\":\"MovieList_MovieListItemImage__1BeSL\",\"MovieListItemImageWrapper\":\"MovieList_MovieListItemImageWrapper__2RRlQ\",\"MovieListItemOverlayDescription\":\"MovieList_MovieListItemOverlayDescription__3yybI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1VtLy\",\"link\":\"Navigation_link__12o2K\",\"activeLink\":\"Navigation_activeLink__2rUFB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__DjWH3\",\"SearchForm\":\"Searchbar_SearchForm__1ac2l\",\"SearchFormButton\":\"Searchbar_SearchFormButton__21S85\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__8f9cn\",\"SearchFormInput\":\"Searchbar_SearchFormInput__VhsfU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cast\":\"Cast_Cast__1sx6z\",\"CastItem\":\"Cast_CastItem__2sFLJ\",\"actorName\":\"Cast_actorName__1I9EI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonLoadMore\":\"ButtonLoadMore_ButtonLoadMore__2ZTsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Reviews\":\"Reviews_Reviews__1TG9u\"};","import { NavLink } from \"react-router-dom\";\nimport s from './Navigation.module.css';\n\nconst Navigation = () => (\n    <nav className={s.navigation}>\n        <NavLink exact to=\"/\"className={s.link} activeClassName={s.activeLink}>Home</NavLink>\n        <NavLink to=\"/movies\"className={s.link} activeClassName={s.activeLink}>Movies</NavLink>\n    </nav>\n);\n\nexport default Navigation;","const BASE_URL = \"https://api.themoviedb.org/3\";\n// const APIKEY = \"api_key=d9642dccb373084b38b1ae3b08bc851f\";\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not Found'));\n}\n\nexport function fetchTrendingToday(page) {\n    return fetchWithErrorHandling(`${BASE_URL}/trending/movie/day?api_key=d9642dccb373084b38b1ae3b08bc851f&page=${page}`);\n}\n\nexport function fetchSearchingMovies(query, page) {\n    return fetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=d9642dccb373084b38b1ae3b08bc851f&language=en-US&query=${query}&page=${page}&include_adult=false`);\n}\n\nexport function fetchMovieById(id) {\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${id}?api_key=d9642dccb373084b38b1ae3b08bc851f&language=en-US`);\n}\n\nexport function fetchMovieCast(id) {\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${id}/credits?api_key=d9642dccb373084b38b1ae3b08bc851f&language=en-US`)\n}\n\nexport function fetchMovieReviews(id) {\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${id}/reviews?api_key=d9642dccb373084b38b1ae3b08bc851f&language=en-US&page=1`)\n}","import { Link } from 'react-router-dom';\nimport PropTypes, { object } from 'prop-types';\nimport s from './MovieList.module.css';\n\nconst MovieList = ({ movies }) => {\n    return (\n        <ul className={s.MovieList}>\n            {movies.map(movie => (\n                <li className={s.MovieListItem} key={movie.id}>\n                    <Link to={`/movies/${movie.id}`} id={movie.id} className={s.MovieListItemUrl}>\n                        <div className={s.MovieListItemImageWrapper}>\n                            {movie.poster_path\n                                ? (<img src={`https://image.tmdb.org/t/p/w500${ movie.poster_path }`} alt={movie.title} className={s.MovieListItemImage} />)\n                                : (<img src=\"http://placehold.it/432x648/000000/FFFFFF/?text=There+is+no+poster\" alt={movie.name} />)}\n                            <div className={s.MovieListItemOverlay}>\n                                <p className={s.MovieListItemOverlayDescription}>{movie.title}</p>\n                            </div>\n                    </div>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    );\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(object).isRequired,\n}\n\nexport default MovieList;\n\n\n// ---------------------------------------------------------------------------------------------------------\n// import { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\n// import Loader from 'react-loader-spinner';\n// import Button from 'components/Button';\n// import ImageGalleryItem from '../ImageGalleryItem';\n// import picturesApi from '../../servises/picturesApi';\n\n// const ImageGallery = ({ query, onClick }) => {\n//     const [images, setImages] = useState([]);\n    // const [error, setError] = useState(null);\n    // const [pages, setPages] = useState(0);\n    // const [currentPage, setCurrentPage] = useState(1);\n    // const [status, setStatus] = useState('idle');\n//     const [searshQuery, setSearshQuery] = useState('');\n\n    // const autoScroll = () => {\n    //     window.scrollTo({\n    //         top: document.documentElement.scrollHeight,\n    //         behavior: 'smooth',\n    //     });\n    // };\n\n//     const resetPage = () => {\n//         setCurrentPage(1);\n//         setImages([]);\n//     };\n\n//     useEffect(() => {\n//         if (query) {\n//             resetPage();\n//             setStatus('pending');\n//             picturesApi(query, 1).then(images => {\n//                 if (images.totalHits === 0) {\n//                     throw new Error(`Nothing with name ${query} was not found`);\n//                 };\n//                 setSearshQuery(query);\n//                 setImages([...images.hits]);\n//                 setStatus('resolved');\n//                 setPages(images.totalHits / 12);\n//                 autoScroll();\n//             }).catch(error => {\n//                 setError(error);\n//                 setStatus('rejected');\n//             } );\n//         }\n//     }, [query]);\n\n//     useEffect(() => {\n        \n//         if ( currentPage > 1 && query === searshQuery) {\n//             setStatus('another-pending');\n//             picturesApi(query, currentPage).then(images => {\n//                 setImages(prevImages => ([...prevImages, ...images.hits]));\n//                 setStatus('resolved');\n//                 autoScroll();\n//             }).catch(error => {\n//                 setError(error);\n//                 setStatus('rejected');\n//             });\n//         }\n//     }, [currentPage, query, searshQuery]);\n\n//     if (status === 'idle') {\n//             return (\n//                 <h1>Please, enter something</h1>\n//             );\n//         }\n\n//         if (status === 'pending') {\n//             return (\n//                 <Loader\n//                     type=\"ThreeDots\"\n//                     color=\"#3f51b5\"\n//                     height={280}\n//                     width={280}\n//                 />\n//             );\n//         }\n\n//         if (status === 'another-pending') {\n//             return (\n//                 <>\n//                     <ul className=\"ImageGallery\">\n//                         <ImageGalleryItem images={images} onClick={onClick} />\n//                     </ul>\n//                     <Loader\n//                         type=\"ThreeDots\"\n//                         color=\"#3f51b5\"\n//                         height={280}\n//                         width={280}\n//                     />\n//                 </>\n//             );\n//         }\n\n//         if (status === 'rejected') {\n//             return (\n//                 <h1>{error.message}</h1>\n//             )\n//         }\n\n//         if (status === 'resolved') {\n//             return (\n//                 <>\n//                     <ul className=\"ImageGallery\">\n//                         <ImageGalleryItem images={images} onClick={onClick} />\n//                     </ul>\n//                     {pages >= currentPage ?\n//                         <Button onClick={() => setCurrentPage(prevPage => prevPage + 1)} />\n//                         : <></>}\n//                 </>\n//             );\n//     };\n// }\n\n// ImageGallery.propTypes = {\n//     query: PropTypes.string.isRequired,\n//     onClick: PropTypes.func.isRequired,\n// };\n\n// export default ImageGallery;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ButtonLoadMore.module.css';\n\nconst Button = ({ onClick }) => (\n    <button className={s.ButtonLoadMore} onClick={onClick}>Load more</button>\n);\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;","import { useState, useEffect } from 'react';\nimport { fetchTrendingToday } from '../servises/moviesApi';\nimport MovieList from 'components/MovieList';\nimport ButtonLoadMore from 'components/ButtonLoadMore';\n\nfunction HomePage() {\n    const [movies, setMovies] = useState([]);\n        // const [error, setError] = useState(null);\n    // const [pages, setPages] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    // const [status, setStatus] = useState('idle');\n\n    useEffect(() => {\n        fetchTrendingToday(currentPage).then(movies => {\n            // console.log(movies);\n            setMovies(prevMovies => [...prevMovies, ...movies.results]);\n        });\n    }, [currentPage]);\n\n    return (\n        <>\n            <h1>Trending today</h1>\n            <MovieList movies={movies} />\n            <ButtonLoadMore onClick={() => setCurrentPage(prevPage => prevPage + 1)}/>\n        </>\n    );\n}\n\nexport default HomePage;","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\nimport PropTypes from 'prop-types';\n\nconst Searchbar = ({onSubmit}) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = e => {\n        setInputValue(e.currentTarget.value);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if (inputValue.trim() === '') {\n          return toast.error('Please do not use empty string, you have to write something');\n        }\n\n        onSubmit(inputValue);\n        setInputValue('');\n    };\n\n    return (\n        <div className={s.Searchbar}>\n            <form className={s.SearchForm} onSubmit={handleSubmit}>\n                <button type=\"submit\" className={s.SearchFormButton}>\n                    <span className={s.SearchFormButtonLabel}>Search</span>\n                </button>\n\n                <input\n                    className={s.SearchFormInput}\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movies\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                />\n            </form>\n        </div>\n    );\n}\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}\n\nexport default Searchbar;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from '../components/Searchbar';\nimport MovieList from 'components/MovieList';\nimport ButtonLoadMore from 'components/ButtonLoadMore';\nimport { fetchSearchingMovies } from '../servises/moviesApi';\n\nfunction MoviesPage() {\n    const [query, setQuery] = useState('');\n    const [movies, setMovies] = useState([]);\n    // const [error, setError] = useState(null);\n    // const [pages, setPages] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    // const [status, setStatus] = useState('idle');\n\n    const history = useHistory();\n    \n    useEffect(() => {\n        if (query === '') {\n            setQuery(history.location.search.slice(7, history.location.search.length));\n        } else {\n            fetchSearchingMovies(query, currentPage).then(movies => {\n                if (movies.total_results === 0) {\n                    throw new Error(`Nothing with name ${query} was not found`);\n                };\n                setMovies(prevMovies => [...prevMovies, ...movies.results]);\n                history.push(`?query=${query}`);\n            });\n        }\n    }, [currentPage, history, query]);\n\n    const getQuery = query => {\n        setQuery(prevQuery => {\n            if (prevQuery !== query) {\n                setMovies([]);\n                setCurrentPage(1);\n                return (query);\n            }\n        });\n    }\n\n    // const autoScroll = () => {\n    //     window.scrollTo({\n    //         top: document.documentElement.scrollHeight,\n    //         behavior: 'smooth',\n    //     });\n    // };\n    \n    return (\n        <>\n            <Searchbar onSubmit={getQuery} />\n            {movies.length === 0\n                ? <h1>Start to search</h1>\n                : <>\n                    <MovieList movies={movies} />\n                    <ButtonLoadMore onClick={() => setCurrentPage(prevPage => prevPage + 1)}/>\n                </>\n            }\n            <ToastContainer />\n        </>\n    )\n}\n\nexport default MoviesPage;","import { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import { Link } from \"react-router-dom\";\nimport { fetchMovieCast } from \"servises/moviesApi\";\nimport s from './Cast.module.css';\n\nfunction Cast({ movieId }) {\n    const [actors, setActors] = useState([]);\n\n    useEffect(() => {\n        fetchMovieCast(movieId).then(result => setActors(result.cast));\n        }, [movieId]);\n\n    return (\n        <>\n            {actors.length === 0\n                ? <p>We don't have any information about actors for this movie</p>\n                : (<ul className={s.Cast}>\n                    {actors.map(actor =>\n                        <li key={actor.id} className={s.CastItem}>\n                            {actor.profile_path\n                                ? (<img src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`} alt={actor.name} />)\n                                : (<img src=\"http://placehold.it/200x300/000000/FFFFFF/?text=There+is+no+photo\" alt={actor.name} />)}\n                            <p className={s.actorName}>{actor.name}</p>\n                        </li>\n                    )}\n                </ul>)\n            }\n        </>\n    )\n}\n\nexport default Cast;","import { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import { Link } from \"react-router-dom\";\nimport { fetchMovieReviews } from \"servises/moviesApi\";\nimport s from './Reviews.module.css';\n\n\nfunction Reviews({ movieId }) {\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        fetchMovieReviews(movieId).then(reviews => {\n            if (reviews.results !== []) {\n                // console.log(reviews.results);\n                setReviews(reviews.results);\n            }\n        });\n        }, [movieId]);\n\n    return (\n        <>\n            {reviews.length === 0\n                ? <p>We don't have any reviews for this movie</p>\n                : (<ul className={s.Reviews}>\n                    {reviews.map(review => <li key={review.id}>\n                        <h4>{review.author}</h4>\n                        <p>{review.content}</p>\n                    </li>)}\n                </ul>)\n            }\n        </>\n    )\n}\n\nexport default Reviews;","import { useHistory } from 'react-router-dom';\n\n\nconst ButtonGoBack = () => {\n    const history = useHistory();\n\n    return (\n            <button onClick={() => history.goBack()}>Go Back</button>\n    )\n};\n\nexport default ButtonGoBack;","import { useState, useEffect } from \"react\";\nimport { NavLink, Route, useRouteMatch, useParams } from \"react-router-dom\";\nimport { fetchMovieById } from \"servises/moviesApi\";\nimport Cast from 'components/Cast';\nimport Reviews from 'components/Reviews';\nimport ButtonGoBack from \"components/ButtonGoBack\";\nimport s from './MovieDetailsPage.module.css';\n\nfunction MovieDetailsPage() {\n    const { movieId } = useParams();\n    const { url } = useRouteMatch();\n    const [movie, setMovie] = useState(null);\n\n        useEffect(() => {\n            fetchMovieById(movieId)\n                .then(film => {\n                    setMovie(film);\n                    console.log(document.body);\n        });\n        }, [movieId]);\n\n    return (\n        <>\n            {movie &&\n                <>\n                    <ButtonGoBack />\n                    <div className={s.MovieDetailsPage}>\n                        {movie.poster_path\n                            ? (<img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} className={s.MovieDetailsPageImage} />)\n                            : (<img src=\"http://placehold.it/432x648/000000/FFFFFF/?text=There+is+no+poster\" alt={movie.name} />)}\n                        <div className={s.description}>\n                            <h2 className={s.title}>{movie.title} ({movie.release_date})</h2>\n                            <p>User Score : {movie.vote_average*10}% </p>\n                            <h3 className={s.title}>Overview</h3>\n                            <p>{movie.overview}</p>\n                            <h3 className={s.title}>Genres</h3>\n                            <ul>{movie.genres.map(genre =>\n                                <li className={s.genre} key={genre.id}>{genre.name}</li>)}\n                            </ul>\n                            <div>\n                                <h3 className={s.title}>Additional information</h3>\n                                <p><NavLink to={`${url}/cast`}>Cast</NavLink></p>\n                                <p><NavLink to={`${url}/reviews`} >Reviews</NavLink></p>\n                            </div>\n                        </div>\n                    </div>\n\n                    \n                    <div>\n                        <Route path={`${url}/cast`}>\n                            <Cast movieId={movieId} />\n                        </Route>\n                        <Route path={`${url}/reviews`}>\n                            <Reviews movieId={movieId} />\n                        </Route>\n                    </div>\n                </>\n            }\n        </>\n    );\n}\n\nexport default MovieDetailsPage;","function NotFoundPage() {\n    return <h1>404 Page not found :(</h1>\n}\n\nexport default NotFoundPage;","// import React, {useState} from 'react';\n// import { ToastContainer } from 'react-toastify';\nimport Navigation from 'components/Navigation';\nimport { Switch, Route } from 'react-router';\nimport HomePage from './views/HomePage';\nimport MoviesPage from './views/MoviesPage';\nimport MovieDetailsPage from 'components/MovieDetailsPage';\nimport NotFoundPage from './views/NotFoundPage';\nimport './App.css';\n// import Searchbar from './components/Searchbar';\n// import ImageGallery from './components/ImageGallery';\n// import Modal from './components/Modal';\n\nconst App = () => {\n  // const [query, setQuery] = useState('');\n  // const [showModal, setShowModal] = useState(false);\n  // const [modalImage, setModalImage] = useState('');\n\n  // const openModal = (modalImage) => {\n  //   setShowModal(true);\n  //   setModalImage(modalImage);\n  // };\n  \n  // const closeModal = () => {\n  //   setShowModal(false);\n  // };\n\n  // const getQuery = query => {\n  //   setQuery(query);\n  // }\n\n  return (\n    <div>\n      <Navigation />\n\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n\n        <Route exact path=\"/movies\">\n          <MoviesPage />\n        </Route>\n\n        <Route path=\"/movies/:movieId\">\n          <MovieDetailsPage />\n        </Route>\n\n        <Route>\n          <NotFoundPage />\n        </Route>\n      </Switch>\n      {/* {showModal && <Modal modalImage={modalImage} onClose={closeModal} />}\n        <Searchbar onSubmit={getQuery} />\n        <ImageGallery query={query} onClick={openModal} /> */}\n      {/* <ToastContainer />  */}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieDetailsPage\":\"MovieDetailsPage_MovieDetailsPage__1_97L\",\"MovieDetailsPageImage\":\"MovieDetailsPage_MovieDetailsPageImage__ppjtk\",\"title\":\"MovieDetailsPage_title__3szsB\",\"description\":\"MovieDetailsPage_description__gREDN\"};"],"sourceRoot":""}